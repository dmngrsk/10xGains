# Conventional Commits Rule

When suggesting a commit message, follow these guidelines:

## Format

Use the Conventional Commits format:

```
<type>(<optional scope>): <description>

<optional body>

<optional footer(s)>
```

## Important Style Rules

1. The first letter after the colon MUST be capitalized
2. The type and scope MUST be lowercase
3. The description should be concise (less than 72 characters)
4. No period at the end of the description line
5. Use imperative mood ("Add feature" not "Added feature")

## Types

- `feat`: A new feature
- `fix`: A bug fix
- `docs`: Documentation only changes
- `style`: Changes that do not affect the meaning of the code (white-space, formatting, etc)
- `refactor`: A code change that neither fixes a bug nor adds a feature
- `perf`: A code change that improves performance
- `test`: Adding missing tests or correcting existing tests
- `build`: Changes that affect the build system or external dependencies
- `ci`: Changes to CI configuration files and scripts
- `chore`: Other changes that don't modify src or test files
- `revert`: Reverts a previous commit

## Scopes

Scopes should be specific to the project area. Some examples:

- `auth`: Authentication system
- `db`: Database related
- `ui`: User interface components
- `api`: API endpoints
- `config`: Configuration changes

## Examples

Good commit messages:
- `feat(user): Add profile image upload feature`
- `fix(auth): Resolve token validation issue`
- `docs(readme): Update installation instructions`
- `refactor(db): Improve query performance`

Bad commit messages:
- `feat(USER): add profile image` (uppercase scope)
- `fix: fixed login bug` (past tense)
- `update code` (missing type)
- `feat(auth): added login. also fixed registration` (too many changes)

## Breaking Changes

For breaking changes, add an exclamation mark after the type/scope and explain in the body:

```
feat(api)!: Change authentication endpoint response format

BREAKING CHANGE: The response format has changed from JWT to OAuth tokens.
This will require clients to update their authentication handling.
```
