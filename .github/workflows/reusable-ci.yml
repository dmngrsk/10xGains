name: Reusable Continuous Integration Workflow

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      build_name:
        type: string
      build_sha:
        type: string

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Validate environment value
        if: inputs.environment != 'staging' && inputs.environment != 'production'
        run: |
          echo "Error: environment must be either 'staging' or 'production'"
          exit 1

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.5.3 --activate

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: |
          yarn install --immutable

      - name: Run linter
        run: |
          yarn lint

  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.5.3 --activate

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: |
          yarn install --immutable --immutable-cache

      - name: Run unit tests with coverage
        run: |
          yarn test:coverage

      - name: Upload unit test coverage
        if: inputs.environment == 'staging'
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage
          path: coverage/
          retention-days: 7

  build:
    name: Build Angular application
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [lint, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.5.3 --activate

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: |
          yarn install --immutable --immutable-cache

      - name: Generate environment file
        run: |
          TEMPLATE_FILE="src/environments/environment.ts"
          OUTPUT_FILE="src/environments/environment.example.ts"

          cp "$TEMPLATE_FILE" "$OUTPUT_FILE"

          if [[ "${{ inputs.environment }}" == "production" ]]; then
            echo "Setting 'production' flag to true for production environment."
            sed -i 's/production: false,/production: true,/' "$OUTPUT_FILE"
          fi

          sed -i \
            -e "s|enableServiceWorker: false,|enableServiceWorker: true,|g" \
            -e "s|__BUILD_NAME__|${{ inputs.build_name }}|g" \
            -e "s|__BUILD_SHA__|${{ inputs.build_sha }}|g" \
            -e "s|__SUPABASE_URL__|${{ vars.SUPABASE_URL }}|g" \
            -e "s|__SUPABASE_ANON_KEY__|${{ secrets.SUPABASE_ANON_KEY }}|g" \
            "$OUTPUT_FILE"

          echo "Generated ${OUTPUT_FILE}:"
          cat "${OUTPUT_FILE}"

      - name: Generate webmanifest file
        run: |
          WEBMANIFEST_FILE="src/manifest.webmanifest"

          jq \
            --arg name "${{ vars.APP_WEBMANIFEST_NAME }}" \
            --arg short_name "${{ vars.APP_WEBMANIFEST_SHORT_NAME }}" \
            '
              (if $name != "" then .name = $name else . end) |
              (if $short_name != "" then .short_name = $short_name else . end)
            ' \
            "$WEBMANIFEST_FILE" > "${WEBMANIFEST_FILE}.tmp"

          mv "${WEBMANIFEST_FILE}.tmp" "$WEBMANIFEST_FILE"
          rm "${WEBMANIFEST_FILE}.tmp"

          echo "Generated ${WEBMANIFEST_FILE}:"
          cat "${WEBMANIFEST_FILE}"

      - name: Build application
        run: |
          yarn build:${{ inputs.environment }}

      - name: Upload build artifacts for staging
        if: inputs.environment == 'staging'
        uses: actions/upload-artifact@v4
        with:
          name: dist-staging
          path: dist/
          retention-days: 7

      - name: Upload build artifacts for production
        if: inputs.environment == 'production'
        uses: actions/upload-artifact@v4
        with:
          name: dist-production
          path: dist/
          retention-days: 30
